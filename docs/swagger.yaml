definitions:
  handler.createResponse:
    properties:
      id:
        type: string
    type: object
  handler.loginResponse:
    properties:
      token:
        type: string
    type: object
  models.CreateDepartment:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.Department:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.ListResponse:
    properties:
      data: {}
      pagination:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.Login:
    properties:
      password:
        default: admin
        type: string
      username:
        default: admin
        type: string
    required:
    - password
    - username
    type: object
  models.Pagination:
    properties:
      limit:
        default: 10
        type: integer
      page:
        default: 1
        type: integer
      page_count:
        type: integer
      total_count:
        type: integer
    type: object
  models.UpdateDepartment:
    properties:
      name:
        type: string
    required:
    - name
    type: object
host: localhost:4040
info:
  contact:
    email: khdiyz.12@gmail.com
    name: Diyorbek Hasanov
  description: API Server for Application
  title: VerifyX API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Sign In Admin
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Sign In Admin
      tags:
      - Auth
  /api/v1/departments:
    get:
      consumes:
      - application/json
      description: Get List Department
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page
        in: query
        name: page
        required: true
        type: integer
      - description: search
        in: query
        name: search
        type: string
      - description: sort by
        in: query
        name: sort_by
        type: string
      - description: sort by
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Department
      tags:
      - Department
    post:
      consumes:
      - application/json
      description: Create Department
      parameters:
      - description: Create Department
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.CreateDepartment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Department
      tags:
      - Department
  /api/v1/departments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Department
      parameters:
      - description: department id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Department
      tags:
      - Department
    get:
      consumes:
      - application/json
      description: Get Department
      parameters:
      - description: department id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Department
      tags:
      - Department
    put:
      consumes:
      - application/json
      description: Update Department
      parameters:
      - description: department id
        in: path
        name: id
        required: true
        type: string
      - description: update department body
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDepartment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.createResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Department
      tags:
      - Department
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
